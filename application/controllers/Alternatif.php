<?php
/*
 Generated by Manuigniter v2.0 
 www.manuigniter.com
*/
class Alternatif extends CI_Controller {
    function __construct() {
        parent::__construct();
        $this->load->model('Alternatif_model');
    }

    /*
    * Listing of alternatif
    */
    public function index() {
        try {
            $id_user = $this->session->userdata('id_user');
            $level = $this->session->userdata('level');
            $data['title'] = 'Alternatif';
            $data['user'] = $this->db->get_where('mst_user', ['email' => $this->session->userdata('email')])->row_array();
            $data['list_user'] = $this->db->get('mst_user')->result_array();
            $data['identitas'] = $this->db->get('tbl_aplikasi')->row();
            $data['alternatif'] = $this->Alternatif_model->get_all_alternatif();
            $data['level'] = $level;
            $this->load->view('templates/header', $data);
            if($level == 'Admin'){
                $this->load->view('templates/sidebar_admin', $data);
            }elseif($level == 'Perbekel'){
                $this->load->view('templates/sidebar_perbekel', $data);
            }
            $this->load->view('admin/alternatif/index', $data);
            $this->load->view('templates/footer');
        } catch (Exception $ex) {
            throw new Exception('Alternatif Controller : Error in index function - ' . $ex);
        }
    }

function import() {
    if ($_SERVER['REQUEST_METHOD'] === 'POST') {
        // Validasi file CSV
        $allowed_ext = array('csv');
        $file_name = $_FILES['file']['name'];
        $file_ext = strtolower(pathinfo($file_name, PATHINFO_EXTENSION));
        if (!in_array($file_ext, $allowed_ext)) {
            $this->session->set_flashdata('msg','error');
            $this->session->set_flashdata('alert_msg', '<div class="alert alert-danger" role="alert">Hanya file CSV yang diizinkan.</div>');
            redirect($_SERVER['HTTP_REFERER']);
        }

        $file_path = $_FILES['file']['tmp_name']; // Menggunakan file sementara
        if (empty($file_path)) {
            $this->session->set_flashdata('msg','error');
            $this->session->set_flashdata('alert_msg', '<div class="alert alert-danger" role="alert">File tidak valid atau kosong.</div>');
            redirect($_SERVER['HTTP_REFERER']);
        }

        // Buka file CSV dari lokasi sementara
        if (($handle = fopen($file_path, "r")) !== FALSE) {
            // Lewati baris pertama (header)
            fgetcsv($handle);
            $insert_data = array();
            $error_messages = array(); // Untuk menyimpan pesan kesalahan

            // Baca setiap baris data
            while (($row = fgetcsv($handle)) !== FALSE) {
                // Pastikan baris memiliki minimal 5 kolom (A2, B2, C2, D2, E2)
                if (count($row) >= 5) {
                    // Ambil hanya lima kolom pertama: A2, B2, C2, D2, E2
                    $nis = isset($row[0]) ? trim($row[0]) : '';
                    $nama_siswa = isset($row[1]) ? trim($row[1]) : '';
                    $jenis_kelamin = isset($row[2]) ? trim($row[2]) : '';
                    $agama = isset($row[3]) ? trim($row[3]) : '';
                    $alamat = isset($row[4]) ? trim($row[4]) : '';

                    // Validasi bahwa tidak ada kolom yang kosong
                    if (empty($nis) || empty($nama_siswa) || empty($jenis_kelamin) || empty($agama) || empty($alamat)) {
                        $error_messages[] = "Baris dengan NIK '$nis' mengandung data kosong.";
                        continue; // Lewati baris ini
                    }

                    // Periksa apakah NIS sudah ada di database
                    $existing_record = $this->db->get_where('alternatif', ['nis' => $nis])->row();
                    if ($existing_record) {
                        $error_messages[] = "NIK '$nis' sudah digunakan oleh : " . $existing_record->nama_siswa;
                        continue; // Lewati baris ini
                    }

                    // Tambahkan data ke array jika valid
                    $insert_data[] = array(
                        'nis' => $nis,
                        'nama_siswa' => $nama_siswa,
                        'jenis_kelamin' => $jenis_kelamin,
                        'agama' => $agama,
                        'alamat' => $alamat
                    );
                } else {
                    $error_messages[] = "Baris tidak lengkap: Kurang dari 5 kolom.";
                }
            }
            fclose($handle);

            // Jika ada kesalahan, tampilkan pesan kesalahan
            if (!empty($error_messages)) {
                $error_message = '<div class="alert alert-danger" role="alert">';
                $error_message .= "Terdapat kesalahan dalam file CSV:<br>";
                $error_message .= implode('<br>', $error_messages);
                $error_message .= '</div>';
                $this->session->set_flashdata('msg','error');
                $this->session->set_flashdata('alert_msg', $error_message);
                redirect($_SERVER['HTTP_REFERER']);
            }

            // Simpan data ke database jika tidak ada kesalahan
            if (!empty($insert_data)) {
                $this->Alternatif_model->import_alternatif($insert_data);
                $this->session->set_flashdata('msg', 'simpan');
                $this->session->set_flashdata('alert_msg', '<div class="alert alert-success" role="alert">Data berhasil diimpor.</div>');
                redirect('alternatif');
            } else {
                $this->session->set_flashdata('msg','error');
                $this->session->set_flashdata('alert_msg', '<div class="alert alert-danger" role="alert">Gunakan template yang sudah disediakan.</div>');
                redirect('alternatif/add');
            }
        } else {
            $this->session->set_flashdata('msg','error');
            $this->session->set_flashdata('alert_msg', '<div class="alert alert-danger" role="alert">Gagal membaca file CSV.</div>');
            redirect($_SERVER['HTTP_REFERER']);
        }
    } else {
        // Jika akses langsung ke method ini
        show_404();
    }
}

    /*
    * Adding a new alternatif
    */
    public function add() {
        try {
            // Ambil data input dari form
            $params = array(
                'nis' => $this->input->post('nis'),
                'nama_siswa' => $this->input->post('nama_siswa'),
                'jenis_kelamin' => $this->input->post('jenis_kelamin'),
                'agama' => $this->input->post('nis'),
                'alamat' => $this->input->post('alamat'),
            );

            // Muat library yang diperlukan
            $this->load->library('upload');
            $this->load->library('form_validation');

            // Atur aturan validasi
            $this->form_validation->set_rules('nis', 'NIK', 'required|callback_check_nis_unique', [
                'required' => 'NIK harus diisi.'
            ]);
            $this->form_validation->set_rules('nama_siswa', 'Nama Calon Penerima Bantuan', 'required');
            $this->form_validation->set_rules('jenis_kelamin', 'Jenis Kelamin', 'required');
           
            $this->form_validation->set_rules('alamat', 'Alamat', 'required');

            // Jika validasi berhasil
            if ($this->form_validation->run()) {
                // Simpan data ke database
                $id = $this->Alternatif_model->add_alternatif($params);
                $this->session->set_flashdata('msg', 'simpan');
                $this->session->set_flashdata('alert_msg', '<div class="alert alert-success text-center">Successfully added.</div>');
                redirect('alternatif/index');
            } else {
                // Ambil data user dan identitas aplikasi
                $id_user = $this->session->userdata('id_user');
                $data['title'] = 'Tambah Alternatif';
                $data['user'] = $this->db->get_where('mst_user', ['email' => $this->session->userdata('email')])->row_array();
                $data['list_user'] = $this->db->get('mst_user')->result_array();
                $data['identitas'] = $this->db->get('tbl_aplikasi')->row();
                // --- Mulai penambahan kode untuk generate NIS faker ---
                // Generate 6 angka acak
                $random_digits = str_pad(mt_rand(0, 999999), 6, '0', STR_PAD_LEFT);
                // Gabungkan dengan awalan 5171
                $data['nis_faker'] = '5171' . $random_digits;
                // --- Akhir penambahan kode ---
                // Tampilkan halaman form tambah alternatif
                $this->load->view('templates/header', $data);
                $this->load->view('templates/sidebar_admin', $data);
                $this->load->view('admin/alternatif/add', $data);
                $this->load->view('templates/footer');
            }
        } catch (Exception $ex) {
            // Tangkap error dan tampilkan pesan kesalahan
            throw new Exception('Alternatif Controller : Error in add function - ' . $ex->getMessage());
        }
    }

    // Callback untuk memeriksa keunikan NIS dan menampilkan nama siswa
    function check_nis_unique($nis) {
        // Query untuk memeriksa apakah NIS sudah ada
        $query = $this->db->get_where('alternatif', ['nis' => $nis]);

        if ($query->num_rows() > 0) {
            // Ambil nama siswa dari hasil query
            $existing_record = $query->row();
            $nama_siswa = $existing_record->nama_siswa;

            // Set pesan kesalahan dengan menyertakan nama siswa
            $this->form_validation->set_message('check_nis_unique', 'NIS sudah digunakan oleh siswa bernama: ' . $nama_siswa);
            return FALSE; // Validasi gagal
        }

        return TRUE; // Validasi berhasil
    }

    /*
    * Editing a alternatif
    */
    public function edit($id) {
        try {
            // Ambil data alternatif berdasarkan ID
            $data['alternatif'] = $this->Alternatif_model->get_alternatif($id);

            // Muat library yang diperlukan
            $this->load->library('upload');
            $this->load->library('form_validation');

            if (isset($data['alternatif']['id'])) {
                // Ambil data input dari form
                $params = array(
                    'nis' => $this->input->post('nis'),
                    'nama_siswa' => $this->input->post('nama_siswa'),
                    'jenis_kelamin' => $this->input->post('jenis_kelamin'),
                    'agama' => $this->input->post('nis'),
                    'alamat' => $this->input->post('alamat'),
                );

                // Atur aturan validasi
                $this->form_validation->set_rules('nis', 'NIK', 'required', [
                    'required' => 'NIK harus diisi.'
                ]);
                $this->form_validation->set_rules('nama_siswa', 'Nama Calon Penerima Bantuan', 'required');
                $this->form_validation->set_rules('jenis_kelamin', 'Jenis Kelamin', 'required');
                
                $this->form_validation->set_rules('alamat', 'Alamat', 'required');

                // Jika validasi berhasil
                if ($this->form_validation->run()) {
                    // Perbarui data di database
                    $this->Alternatif_model->update_alternatif($id, $params);
                    $this->session->set_flashdata('msg','edit');
                    redirect('alternatif/index');
                } else {
                    // Ambil data user dan identitas aplikasi
                    $id_user = $this->session->userdata('id_user');
                    $data['title'] = 'Edit Alternatif';
                    $data['user'] = $this->db->get_where('mst_user', ['email' => $this->session->userdata('email')])->row_array();
                    $data['list_user'] = $this->db->get('mst_user')->result_array();
                    $data['identitas'] = $this->db->get('tbl_aplikasi')->row();

                    // Tampilkan halaman form edit alternatif
                    $this->load->view('templates/header', $data);
                    $this->load->view('templates/sidebar_admin', $data);
                    $this->load->view('admin/alternatif/edit', $data);
                    $this->load->view('templates/footer');
                }
            } else {
                show_error('The alternatif you are trying to edit does not exist.');
            }
        } catch (Exception $ex) {
            // Tangkap error dan tampilkan pesan kesalahan
            throw new Exception('Alternatif Controller : Error in edit function - ' . $ex->getMessage());
        }
    }

    /*
    * Deleting alternatif
    */
    function remove($id) {
        try {
            $alternatif = $this->Alternatif_model->get_alternatif($id);

            // check if the alternatif exists before trying to delete it
            if (isset($alternatif['id'])) {
                $this->Alternatif_model->delete_alternatif($id);
                $this->session->set_flashdata('alert_msg', '<div class="alert alert-success text-center">Succesfully Removed.</div>');
                redirect('alternatif/index');
            } else {
                show_error('The alternatif you are trying to delete does not exist.');
            }
        } catch (Exception $ex) {
            throw new Exception('Alternatif Controller : Error in remove function - ' . $ex);
        }
    }

    /*
    * View more a alternatif
    */
    public function view_more($id) {
        try {
            $data['alternatif'] = $this->Alternatif_model->get_alternatif($id);

            if (isset($data['alternatif']['id'])) {
                $data['_view'] = 'alternatif/view_more';
                $this->load->view('layouts/main', $data);
            } else {
                show_error('The alternatif you are trying to view more does not exist.');
            }
        } catch (Exception $ex) {
            throw new Exception('Alternatif Controller : Error in View more function - ' . $ex);
        }
    }

    /*
    * Listing of alternatif
    */
    public function search_by_clm() {
        $column_name = $this->input->post('column_name');
        $value_id = $this->input->post('value_id');
        $data['noof_page'] = 0;
        $params = array();
        $data['alternatif'] = $this->Alternatif_model->get_all_alternatif_by_cat($column_name, $value_id);
        $data['_view'] = 'alternatif/index';
        $this->load->view('layouts/main', $data);
    }

    /*
    * get search values by column- alternatif
    */
    public function get_search_values_by_clm() {
        $clm_name = $this->input->post('clm_name');
        $value = $this->input->post('value');
        $id = $this->input->post('id');
        $params = array(
            $clm_name => $value,
        );
        $this->Alternatif_model->update_alternatif($id, $params);
        $data['noof_page'] = 0;
        $data['alternatif'] = $this->Alternatif_model->get_all_alternatif();
        $this->load->view('alternatif/index', $data);
    }
}
